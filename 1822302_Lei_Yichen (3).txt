#define FREEGLUT_STATIC
#include <GL/freeglut.h>
#include <stdlib.h>

// Lighting and Materials
// Student Name: Yichen.Lei	
// Student ID: 1822302
// Programme of study: ICS
// General explanation here if necessary

// Main body of code with necessary comments:


GLfloat light_x = 1.0;
GLfloat light_y = 1.0;
GLfloat light_z = 1.0;
GLfloat diffuseMaterial[4] = { 0.5, 0.5, 0.5, 1.0 };


void myinit1(GLfloat light_x, GLfloat light_y, GLfloat light_z) {
	GLfloat mat_specular[] = { 1.0, 1.0, 1.0, 1.0 };
	GLfloat mat_shininess[] = { 50.0 };
	GLfloat light_position[] = { light_x, light_y, light_z, 0.0 }; // Light
	glMaterialfv(GL_FRONT, GL_DIFFUSE, diffuseMaterial);
	glMaterialfv(GL_FRONT, GL_SHININESS, mat_shininess);

	glMaterialfv(GL_FRONT, GL_SPECULAR, mat_specular);
	glMaterialf(GL_FRONT, GL_SHININESS, 25.0);
	glLightfv(GL_LIGHT0, GL_POSITION, light_position);

	glEnable(GL_LIGHTING);
	glEnable(GL_LIGHT0);
	glDepthFunc(GL_LEQUAL);
	glEnable(GL_DEPTH_TEST);
	glColorMaterial(GL_FRONT, GL_DIFFUSE);
	glEnable(GL_COLOR_MATERIAL);

}


void keyboard_input(unsigned char key, int x, int y) { // Move light and Color of sphere
	if (key == 'l' || key == 'L') {
		light_x = light_x + 0.1;
		if (light_x >= 2) {
			light_x = -2;
		}
	}
	if (key == 'r' || key == 'R') {
			diffuseMaterial[0] += 0.05;
		if (diffuseMaterial[0] > 1.0)
				diffuseMaterial[0] = 0.0;
		}
	else if (key == 'g' || key == 'G') {
			diffuseMaterial[1] += 0.05;
		if (diffuseMaterial[1] > 1.0)
				diffuseMaterial[1] =0.0;
		}
	else if (key == 'b' || key == 'B') {
			diffuseMaterial[2] += 0.05;
		if (diffuseMaterial[2] > 1.0)
				diffuseMaterial[2] = 0.0;
		}

		myinit1(light_x, light_y, light_z);
		glutPostRedisplay();

		glColor4fv(diffuseMaterial);
		glutPostRedisplay();

	}


void display(void) {
	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
	glutSolidSphere(1.0, 10, 10); // Radius is 1.0, slices and stucks are 50 and 10
	glFlush();
}

void myReshape(GLsizei w, GLsizei h) {
	glViewport(0, 0, w, h);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	if (w <= h)
		glOrtho(-1.5, 1.5, -1.5 * (GLfloat)h / (GLfloat)w, 1.5 * (GLfloat)h / (GLfloat)w, -10.0, 10.0);
	else
		glOrtho(-1.5 * (GLfloat)w / (GLfloat)h, 1.5 * (GLfloat)w / (GLfloat)h, -1.5, 1.5, -10.0, 10.0);
	glMatrixMode(GL_MODELVIEW);
	glLoadIdentity();
}

int main(int argc, char** argv) {
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGBA | GLUT_DEPTH);
	glutInitWindowPosition(0, 0);
	glutInitWindowSize(500, 500);
	glutCreateWindow("Lighting Materials");
	myinit1(light_x, light_y, light_z);
	glutKeyboardFunc(keyboard_input);
	glutReshapeFunc(myReshape);
	glutDisplayFunc(display);
	glutMainLoop();
}